#!/bin/bash

function download_node_binary_on_nodes {
    node_version="latest"
    node_url="https://sn-node.s3.eu-west-2.amazonaws.com/sn_node-${node_version}-x86_64-unknown-linux-musl.tar.gz"
    
    for ip in $(<elders-ip-list xargs -r); do
        ssh -o "BatchMode yes" root@${ip} "wget ${node_url}" 1>"logs/$ip.log" 2>&1 &
    done

    for ip in $(<adults-ip-list xargs -r); do
        ssh -o "BatchMode yes" root@${ip} "wget ${node_url}" 1>"logs/$ip.log" 2>&1 &
    done
    wait
}

function deploy_elders {
    INTERVAL_BETWEEN_ELDERS=30
    elder_nodes=()
    for ip in $(<elders-ip-list xargs -r); do
        elder_nodes+=(${ip})
    done
    ssh root@${elder_nodes[0]} "bash -s" < start-genesis-node ${elder_nodes[0]} > connection_info
    cp connection_info ~/.config/sn_node/node_connection_info.config
    hcc=$(cat connection_info)
    #Convert it into an array
    hcc="[${hcc}]";

    echo "Genesis node running with connection info: ${hcc}"

    ip_list_len=${#elder_nodes[@]}
    for (( i = 1; i < ip_list_len; i++ )); do
        echo "Targeting node at ${elder_nodes[i]}"
        printf '\nRunning elder number: %d  at in... ' $(($i));
        for (( j = ${INTERVAL_BETWEEN_ELDERS}; j > 0; --j )); do
            printf '%d ' ${j};
            sleep 1;
        done
        ssh root@${elder_nodes[i]} "bash -s" < start-new-node ${hcc@Q} "node_data"
    done
}

function deploy_adults {
    INTERVAL_BETWEEN_ADULTS=15
    adult_nodes=()
    for ip in $(<adults-ip-list xargs -r); do
        adult_nodes+=(${ip})
    done
    hcc=$(cat connection_info)
    if [[ ${hcc} == "" ]]; then
        printf 'Hard coded contacts not available.\n.';
        exit 1;
    fi
    #Convert it into an array
    hcc="[${hcc}]";

    ip_list_len=${#adult_nodes[@]}
    for (( i = 0; i < ip_list_len; i++ )); do
        echo "Targeting node at ${adult_nodes[i]}"
        printf '\nDeploying adults at node: %d  at in... ' $(($i  + 1));
        for (( j = ${INTERVAL_BETWEEN_ADULTS}; j > 0; --j )); do
            printf '%d ' ${j};
            sleep 1;
        done
        ssh root@${adult_nodes[i]} "bash -s" < start-new-node ${hcc@Q} "node-1-data"
        sleep 5
        ssh root@${adult_nodes[i]} "bash -s" < start-new-node ${hcc@Q} "node-2-data"
    done
}

function churn {
    adult_nodes=()
    for ip in $(<adults-ip-list xargs -r); do
        adult_nodes+=(${ip})
    done
    time=(5m 10m 15m)
    hcc=$(cat connection_info)
    hcc="[${hcc}]"
    while true; do
        t=$((RANDOM % 3))
        echo "Sleep: ${time[t]}"
        sleep ${time[t]}
        i=$((RANDOM % 10))
        echo "Churning Adults at node ${i}"
        ssh root@${adult_nodes[i]} 'pkill sn_node && rm -rf node*'
        echo "Sleep 15m"
        sleep 15m
        ssh root@${adult_nodes[i]} "bash -s" < start-new-node ${hcc@Q} "node-1-data"
        sleep 5
        ssh root@${adult_nodes[i]} "bash -s" < start-new-node ${hcc@Q} "node-2-data"
    done
}
